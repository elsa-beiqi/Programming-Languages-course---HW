%{
int pos = 1;

%}

ID       [a-zA-Z_][_a-zA-Z0-9]*

%x comment

%%

"//" BEGIN(comment);
<comment>"\n" {BEGIN(INITIAL); pos++;}
<comment>. {}

\n pos++;

if printf("%d tIF\n", pos); 
endif printf("%d tENDIF\n", pos); 

, printf("%d tCOMMA\n", pos); 
".*" printf("%d tDOTPROD\n", pos);
"(" printf("%d tLPAR\n", pos); 
")" printf("%d tRPAR\n", pos); 
"=" printf("%d tASSIGNM\n", pos); 
"-" printf("%d tMINUS\n", pos);
"+" printf("%d tPLUS\n", pos);
"/" printf("%d tDIV\n", pos);
"*" printf("%d tSTAR\n", pos);
";" printf("%d tSEMI\n", pos); 
"==" printf("%d tEQUL\n", pos);
"!=" printf("%d tINEQ\n", pos);
"<" printf("%d tLT\n", pos);
"<=" printf("%d tLE\n", pos);
">" printf("%d tGT\n", pos);
">=" printf("%d tGE\n", pos);
"[" printf("%d tLBRAC\n", pos);
"]" printf("%d tRBRAC\n", pos);
"&&" printf("%d tAND\n", pos);
"||" printf("%d tOR\n", pos);

[0-9]+E?[0-9]* printf("%d tPOSINT (%s) \n", pos, yytext);
-[0-9]+E?[0-9]* printf("%d tNEGINT (%s) \n", pos, yytext);

[0-9]+"."[0-9]+E?-?[0-9]* printf("%d tPOSREAL (%s) (%s)\n", pos, yytext);
-[0-9]+"."[0-9]+E?-?[0-9]* printf("%d tNEGREAL (%s) (%s)\n", pos, yytext);
 
vector printf("%d tVECTOR\n", pos); 
matrix printf("%d tMATRIX\n", pos); 
transpose printf("%d tTRANSPOSE\n", pos); 

{ID} printf("%d tIDENT (%s)\n", pos , yytext);

%%


int main(){
	yylex();
}